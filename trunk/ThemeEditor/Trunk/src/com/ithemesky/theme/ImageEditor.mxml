<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="468" height="680" xmlns:theme="com.ithemesky.theme.*" creationComplete="canvas1_creationCompleteHandler(event)">
	<mx:Script>
		<![CDATA[
			import com.ithemesky.event.EditorEvent;
			import com.just.editor.Image;
			import com.just.editor.PictureCanvas;
			import com.just.editor.ScaleEvent;
			
			import mx.controls.Image;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.SliderEvent;

			private var _picCanvas:PictureCanvas;
			private var _file:FileReference;
			private var _loader:Loader;
			private var _targetControl:UIComponent;
			private var _showSelector:Boolean = true;
			
			private var _iphone:iPhone;
			public function set iPhone(value:iPhone):void
			{
				this._iphone = value;
			}
			
			protected function canvas1_creationCompleteHandler(event:FlexEvent):void
			{
				//初始化图片界面
				_picCanvas = new PictureCanvas();
				_picCanvas.x=10;
				_picCanvas.y=10;
				editor.rawChildren.addChild(_picCanvas);
				_picCanvas.Relayout(editor.width-10, editor.height-10);
				_picCanvas.addEventListener(ScaleEvent.SCALE_CHANGED, imageChangedHandler);
				
				var canvasMask:Sprite = new Sprite();
				canvasMask.x = 20;
				canvasMask.y = 20;
				canvasMask.graphics.clear();
				canvasMask.graphics.beginFill(0xff0000, 1);
				canvasMask.graphics.drawRect(0, 0, editor.width-25, editor.height-25);
				canvasMask.graphics.endFill()
				editor.rawChildren.addChild(canvasMask);
				_picCanvas.mask = canvasMask;
				
				//_picCanvas.LoadPictureByUrl("Resources/Image/Wallpaper.png");
				this.parent.dispatchEvent(new EditorEvent(EditorEvent.LOAD_COMPLETE));
				
				//文件选择添加事件
				_file=new FileReference();
				_file.addEventListener(Event.COMPLETE, fileHandler);
				_file.addEventListener(Event.SELECT, fileHandler);
				_loader=new Loader();
				_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loaderComplete);
				
				//Init editor button's event
				for (var i:Number=0; i<this.numChildren; i++){
					var child:DisplayObject = this.getChildAt(i);
					if (child is EditorButton) {
						child.addEventListener(MouseEvent.CLICK, editorbutton_clickHandler);
					}
				}
			}
			
			public function LoadImage(img:Bitmap, control:UIComponent, sw:Number=60, sh:Number=60, source:Object=null):void
			{
				_targetControl = control;
				_picCanvas.SetSelectorSize(sw, sh);
				_picCanvas.LoadPicture(img.bitmapData);
			}

			protected function editorbutton_clickHandler(event:MouseEvent):void
			{
				var button:EditorButton = EditorButton(event.currentTarget);
				switch (button.ImageName) {
					case "editor_open":
						_file.browse(new Array(new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg;*.jpeg;*.gif;*.png")));
						break;
					case "editor_cut":
						_picCanvas.CutPicture();
						break;
					case "editor_move":
						_showSelector = !_showSelector;
						_picCanvas.ShowSelector(_showSelector);
						break;
					case "editor_realistic":
						_picCanvas.SetRealSize();
						break;
					case "editor_suit":
						_picCanvas.SetAproposSize();
						break;
					case "editor_rotate_left":
						_picCanvas.LeftRotate();
						break;
					case "editor_rotate_right":
						_picCanvas.RightRotate();
						break;
					case "editor_rotate_v":
						_picCanvas.HorizontalRotate();
						break;
					case "editor_rotate_h":
						_picCanvas.VerticalRotate();
						break;
					case "editor_img_original":
						_picCanvas.RestorePicture();
						break;
					case "btn_back":
						this.parent.dispatchEvent(new EditorEvent(EditorEvent.BACK));
						break;
					case "btn_add_icon":
						this.parent.dispatchEvent(new EditorEvent(EditorEvent.ADD_ICON));
						break;
					case "guide_btn_save":
						this.parent.dispatchEvent(new EditorEvent(EditorEvent.COMPIRE));
						break;
					case "editor_zoom":
						zoomSlider.visible = !zoomSlider.visible;
						break;
				}
				imageChangedHandler(null);
			}
			
			private function imageChangedHandler(event:Event):void
			{
				if (_targetControl is Icon)
				{
					(_targetControl as Icon).ImageData = _picCanvas.pictureBitmap;
				}
				else
				{
					if (_targetControl.id == "statusBar")
					{
						_iphone.statusBarBmp = _picCanvas.pictureBitmap;
					}
					else if (_targetControl.id == "wallpaper")
					{
						_iphone.wallpaperBmp = _picCanvas.pictureBitmap;
					}
					else if (_targetControl.id == "dock")
					{
						_iphone.dockBmp = _picCanvas.pictureBitmap;
					}
				}
			}
			
			/**
			 * 图片读取完毕，载入图片
			 */
			private function loaderComplete(e:Event):void
			{
				var loader:Loader=Loader(e.target.loader);
				var bmpData:BitmapData=Bitmap(loader.content).bitmapData;
				this._picCanvas.LoadPicture(bmpData);
			}
			
			/**
			 * 打开本地图片
			 */
			private function fileHandler(e:Event):void
			{
				var fileOpen:FileReference=e.target as FileReference;
				switch (e.type)
				{
					case Event.SELECT:
						fileOpen.load(); //仅在flash player10中支持
						break;
					case Event.COMPLETE:
						_loader.loadBytes(fileOpen.data); //仅在flash player10中支持
						break;
				}
			}


			protected function zoomSlider_changeHandler(event:SliderEvent):void
			{
				this._picCanvas.ScalePicture(zoomSlider.value);
				imageChangedHandler(event);
			}

		]]>
	</mx:Script>
	<mx:Canvas id="editor" x="40" y="45" width="408" height="568" backgroundImage="@Embed('Resources/Image/editor_bg.png')">
	</mx:Canvas>
	<theme:EditorButton x="45" y="16" ImageName="editor_open" toolTip="open"/>
	<theme:EditorButton x="79" y="16" ImageName="editor_cut" toolTip="cut"/>
	<theme:EditorButton x="113" y="16" ImageName="editor_move" toolTip="move"/>
	<theme:EditorButton x="149" y="16" ImageName="editor_zoom" toolTip="zoom"/>
	<theme:EditorButton x="181" y="16" ImageName="editor_realistic" toolTip="realistic"/>
	<theme:EditorButton x="216" y="16" ImageName="editor_suit" toolTip="suit"/>
	<theme:EditorButton x="251" y="16" ImageName="editor_rotate_left" toolTip="rotate left"/>
	<theme:EditorButton x="284" y="16" ImageName="editor_rotate_right" toolTip="rotate right"/>
	<theme:EditorButton x="318" y="16" ImageName="editor_rotate_v" toolTip="rotate vertical"/>
	<theme:EditorButton x="353" y="16" ImageName="editor_rotate_h" toolTip="rotate horizontal"/>
	<theme:EditorButton x="387" y="16" ImageName="editor_img_original" toolTip="original"/>	
	<theme:EditorButton x="421" y="16" ImageName="editor_icon_original" visible="false"/>
	<theme:EditorButton x="46" y="637" ImageName="btn_back" toolTip="back"/>
	<theme:EditorButton x="113" y="637" ImageName="btn_add_icon" toolTip="add a new icon"/>
	<theme:EditorButton x="250" y="625" ImageName="guide_btn_save" toolTip="save"/>
	<mx:VSlider id="zoomSlider" x="148" y="37" height="91" maximum="100" minimum="10" value="100" visible="false" change="zoomSlider_changeHandler(event)" liveDragging="true"/>
</mx:Canvas>
