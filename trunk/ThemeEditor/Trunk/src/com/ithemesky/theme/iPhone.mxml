<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="406" height="817" backgroundImage="@Embed('Resources/Image/Iphone.png')"
		   xmlns:theme="com.ithemesky.theme.*"
		   mouseOver="iphone_mouseOverHandler(event)"
		   creationComplete="iPhone_creationCompleteHandler(event)"
		    xmlns:controls="com.ithemesky.controls.*">
	<mx:Script>
		<![CDATA[
			import com.gskinner.motion.GTween;
			import com.gskinner.motion.easing.Sine;
			import com.ithemesky.Util;
			import com.ithemesky.event.iPhoneEvent;
			
			import deng.fzip.FZip;
			
			import mx.containers.Tile;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;

			private var _dragging:Boolean = false;
			public var ThemeName:String = "iThemeSky";
			[Bindable] private var _phoneIcon:String;
			[Bindable] private var _mailIcon:String;
			[Bindable] private var _ipodIcon:String;
			[Bindable] private var _safariIcon:String;
			
			protected function icon_clickHandler(event:MouseEvent, paddingY:Number=0):void
			{
				if (!_dragging && event.currentTarget is Icon)
				{
					this.dispatchEvent(new iPhoneEvent(iPhoneEvent.ICON_CLICK, Icon(event.currentTarget).ImageData, Icon(event.currentTarget), wallpaper.x + event.currentTarget.x, wallpaper.y + event.currentTarget.y + paddingY));
				}
			}


			protected function iPhone_creationCompleteHandler(event:FlexEvent):void
			{
				

			}
			
			public function LoadXml(xmlUrl:String = "DefaultIcons.xml"):void
			{
				var baseUrl:String = "http://www.ithemesky.com/";
				var loader:URLLoader = new URLLoader();
				loader.addEventListener(Event.COMPLETE, function(event:Event):void {
					var xml:XML = new XML(loader.data);
					//添加背景
					var bmpLoader:Loader;
					bmpLoader = new Loader();
					bmpLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, loadErrorHandler);
					bmpLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, function(e:Event):void {
						wallpaperBmp = Bitmap(e.target.content);
					});
					bmpLoader.load(new URLRequest(baseUrl + xml.Wallpaper.@Image));
					//添加Dock
					bmpLoader = new Loader();
					bmpLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, loadErrorHandler);
					bmpLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, function(e:Event):void {
						dockBmp = Bitmap(e.target.content);
					});
					bmpLoader.load(new URLRequest(baseUrl + xml.Dock.@Image));
					//添加StatusBar
					bmpLoader = new Loader();
					bmpLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, loadErrorHandler);
					bmpLoader.contentLoaderInfo.addEventListener(Event.COMPLETE, function(e:Event):void {
						statusBarBmp = Bitmap(e.target.content);
					});
					bmpLoader.load(new URLRequest(baseUrl + xml.StatusBar.@Image));
					
					//添加图标
					var index:int = 0;
					for each (var iconXml:XML in xml..Icon)
					{
						//创建一屏面板
						var tileIndex:Number = Math.floor(index / 16);
						var tile:Tile;
						if (tileIndex >= container.numChildren)
						{
							tile = new Tile();
							tile.id = "tile_" + tileIndex;
							tile.width = 320;
							tile.height = 369;
							tile.setStyle("paddingLeft", "5");
							tile.setStyle("paddingRight", "5");
							tile.horizontalScrollPolicy = "off";
							tile.verticalScrollPolicy = "off";
							tile.direction = "horizontal";
							container.addChild(tile);
							
							var indexFlag:Canvas = new Canvas();
							indexFlag.buttonMode = true;
							indexFlag.useHandCursor = true;
							indexFlag.width = 8;
							indexFlag.height = 5;
							indexFlag.setStyle("backgroundColor", tileIndex == 0 ? "#ff0000" : "#999999");
							indexFlag.data = tileIndex;
							indexFlag.addEventListener(MouseEvent.CLICK, indexFlagClickHandler);
							indexBox.addChild(indexFlag);
						}
						else
						{
							tile = container.getChildAt(tileIndex) as Tile;
						}
						//判断是否ipod,mail,phone,safari
						if ("ipod,mail,phone,safari".indexOf(iconXml.@Text.toLocaleLowerCase()) >= 0)
						{
							if (iconXml.@Text.toLocaleLowerCase() == "ipod")
							{
								_ipodIcon = baseUrl + iconXml.@Image;
							}
							if (iconXml.@Text.toLocaleLowerCase() == "mail")
							{
								_mailIcon = baseUrl + iconXml.@Image;
							}
							if (iconXml.@Text.toLocaleLowerCase() == "phone")
							{
								_phoneIcon = baseUrl + iconXml.@Image;
							}
							if (iconXml.@Text.toLocaleLowerCase() == "safari")
							{
								_safariIcon = baseUrl + iconXml.@Image;
							}
						}
						else
						{
							//添加图标
							var icon:Icon = new Icon();
							icon.ImageUrl = baseUrl + iconXml.@Image;
							icon.Text = iconXml.@Text;
							icon.addEventListener(MouseEvent.CLICK, icon_clickHandler);
							tile.addChild(icon);
							index++;
						}
					}
					if (indexBox.numChildren <= 1) indexBox.visible = false;
				});
				loader.load(new URLRequest(xmlUrl));
				
				//设置时间
				setInterval(function():void {
					var time:Date = new Date();
					var fr:DateFormatter=new DateFormatter();
					fr.formatString="JJ:NN:SS";
					labTime.text=fr.format(time);
				}, 1000);
			}
			private function loadErrorHandler(event:IOErrorEvent):void
			{
				trace("io error");
			}
			public function Clear():void
			{
				container.removeAllChildren();
				indexBox.removeAllChildren();
			}
			
			public function AddIcon(text:String, img:Bitmap, index:Number):void
			{
				//创建一屏面板
				var tileIndex:Number = Math.floor(index / 16);
				var tile:Tile;
				if (tileIndex >= container.numChildren)
				{
					tile = new Tile();
					tile.id = "tile_" + tileIndex;
					tile.width = 320;
					tile.height = 369;
					tile.setStyle("paddingLeft", "5");
					tile.setStyle("paddingRight", "5");
					tile.horizontalScrollPolicy = "off";
					tile.verticalScrollPolicy = "off";
					tile.direction = "horizontal";
					container.addChild(tile);
					
					var indexFlag:Canvas = new Canvas();
					indexFlag.buttonMode = true;
					indexFlag.useHandCursor = true;
					indexFlag.width = 8;
					indexFlag.height = 5;
					indexFlag.setStyle("backgroundColor", tileIndex == 0 ? "#ff0000" : "#999999");
					indexFlag.data = tileIndex;
					indexFlag.addEventListener(MouseEvent.CLICK, indexFlagClickHandler);
					indexBox.addChild(indexFlag);
				}
				else
				{
					tile = container.getChildAt(tileIndex) as Tile;
				}
				//添加图标
				var icon:Icon = new Icon();
				icon.ImageData = img;
				icon.Text = text;
				icon.addEventListener(MouseEvent.CLICK, icon_clickHandler);
				tile.addChild(icon);
				
				index++;
			}

			protected function wallpaper_clickHandler(event:MouseEvent):void
			{
				if (!event.target.hasOwnProperty("id")) return;
				if (!_dragging && (event.target.id == "wallpaper" || event.target.id == "container"))
				{
					onWallpaperClick();
				}
			}


			protected function container_mouseDownHandler(event:MouseEvent):void
			{
				var minX:Number = (1-container.numChildren)*320;
				container.startDrag(false, new Rectangle(minX, 0, -minX, 0));
				_dragging = true;
			}


			protected function container_mouseUpHandler(event:MouseEvent):void
			{
				if (_dragging)
				{
					container.stopDrag();
					_dragging = false;
					var index:Number = Math.round(container.x / 320);
					//container.x = index * 320;
					new GTween(container, 0.3, {x:index*320}, {ease:Sine.easeIn});
					for (var i:Number = 0; i<indexBox.numChildren; i++)
					{
						if (i == -index)
						{
							(indexBox.getChildAt(i) as Canvas).setStyle("backgroundColor", "#ff0000");
						}
						else
						{
							(indexBox.getChildAt(i) as Canvas).setStyle("backgroundColor", "#999999");
						}
					}
				}
				else
				{
					if (!event.target is TextField && event.target.id && event.target.id == "container")
					{
						onWallpaperClick();
					}
				}
			}
			
			private function indexFlagClickHandler(event:MouseEvent):void
			{
				var indexFlag:Canvas = event.target as Canvas;
				var index:Number = -Number(indexFlag.data);
				new GTween(container, 0.3, {x:index*320}, {ease:Sine.easeIn});
				for (var i:Number=0; i<indexBox.numChildren; i++)
				{
					(indexBox.getChildAt(i) as Canvas).setStyle("backgroundColor", "#999999");
				}
				indexFlag.setStyle("backgroundColor", "#ff0000");
			}
			
			protected function iphone_mouseOverHandler(event:MouseEvent):void
			{
				if (_dragging && !event.buttonDown)
				{
					container_mouseUpHandler(event);
				}
			}
			
			public function GrowControl(id:String):void
			{
				overEffect.end();
				if (id == "wallpaper")
				{
					overEffect.target = wallpaper;
					overEffect.play();
				}
				if (id == "dock")
				{
					overEffect.target = dock;
					overEffect.play();
				}
				if (id == "statusBar")
				{
					overEffect.target = statusBar;
					overEffect.play();
				}				
			}
			
			public function GrowAllIcons():void
			{
				var index:Number = -Math.round(container.x / 320);
				var tile:Tile = container.getChildAt(index) as Tile;
				var i:Number;
				for (i=0; i<tile.numChildren; i++)
				{
					(tile.getChildAt(i) as Icon).Grow();
				}
			}
			public function onWallpaperClick():void
			{
				var bmp:Bitmap = Util.UIComponentToBitmap(wallpaper);
				this.dispatchEvent(new iPhoneEvent(iPhoneEvent.BACKGROUND_CLICK, bmp, wallpaper));
			}
			public function onStatusBarClick():void
			{
				var bmp:Bitmap = statusBarBmp;
				this.dispatchEvent(new iPhoneEvent(iPhoneEvent.STATUS_BAR_CLICK, bmp, statusBar));
			}
			public function onDockClick(event:Event=null):void
			{
				if (event == null || (event.target.hasOwnProperty("id") && event.target.id == "dock"))
				{
					var bmp:Bitmap = dockBmp;
					this.dispatchEvent(new iPhoneEvent(iPhoneEvent.DOCK_CLICK, bmp, dock));
				}
			}
			
			public function onAnIconClick():void
			{
				var icon:Icon = (container.getChildAt(0) as Tile).getChildAt(0) as Icon;
				this.dispatchEvent(new iPhoneEvent(iPhoneEvent.ICON_CLICK, icon.ImageData, icon, wallpaper.x + icon.x, wallpaper.y + icon.y));
			}
			[Embed(source="Resources/Image/Icons/New.png")]
			private var newIcon:Class;
			public function AddNewIcon(label:String):void
			{
				var tile:Tile = container.getChildAt(container.numChildren-1) as Tile;
				if (tile.numChildren == 16)
				{
					tile = new Tile();
					tile.id = "tile_" + container.numChildren;
					tile.width = 320;
					tile.height = 369;
					tile.setStyle("paddingLeft", "5");
					tile.setStyle("paddingRight", "5");
					tile.horizontalScrollPolicy = "off";
					tile.verticalScrollPolicy = "off";
					container.addChild(tile);
					
					for (var i:Number=0; i<indexBox.numChildren; i++)
					{
						(indexBox.getChildAt(i) as Canvas).setStyle("backgroundColor", "#999999");
					}
					
					var indexFlag:Canvas = new Canvas();
					indexFlag.buttonMode = true;
					indexFlag.useHandCursor = true;
					indexFlag.width = 8;
					indexFlag.height = 5;
					indexFlag.setStyle("backgroundColor", "#ff0000");
					indexFlag.data = indexBox.numChildren;
					indexFlag.addEventListener(MouseEvent.CLICK, indexFlagClickHandler);
					indexBox.addChild(indexFlag);
				}
				//添加图标
				var icon:Icon = new Icon();
				icon.ImageData = new newIcon();
				icon.Text = label;
				icon.addEventListener(MouseEvent.CLICK, icon_clickHandler);
				tile.addChild(icon);
				//激活面板
				new GTween(container, 0.3, {x:-(container.numChildren-1)*320}, {ease:Sine.easeIn});
			}
			
			public function CompileTheme():void
			{
				var bytes:ByteArray = new ByteArray();
				var zip:FZip = new FZip();
				var verifyObject:Object = {};
				for (var index:Number=0; index<container.numChildren; index++)
				{
					var tile:Tile = container.getChildAt(index) as Tile;
					for (var i:Number=0; i<tile.numChildren; i++)
					{
						var icon:Icon = tile.getChildAt(i) as Icon;
						if (!verifyObject.hasOwnProperty(ThemeName + "/Icons/" + icon.Text + ".png"))
						{
							if (icon.ImageData != null)
							{
								zip.addFile(ThemeName + "/Icons/" + icon.Text + ".png", Util.BitmapDataToByteArray(icon.ImageData));
								verifyObject[ThemeName + "/Icons/" + icon.Text + ".png"] = 1;
							}
						}
					}
				}
				for (var j:Number=0; j<dockContainer.numChildren; j++)
				{
					if (dockContainer.getChildAt(j) is Icon)
					{
						icon = dockContainer.getChildAt(j) as Icon;
						if (!verifyObject.hasOwnProperty(ThemeName + "/Icons/" + icon.Text + ".png"))
						{
							if (icon.ImageData != null)
							{
								zip.addFile(ThemeName + "/Icons/" + icon.Text + ".png", Util.BitmapDataToByteArray(icon.ImageData));
								verifyObject[ThemeName + "/Icons/" + icon.Text + ".png"] = 1;
							}
						}
					}
				}
				//添加背景
				zip.addFile(ThemeName + "/Wallpaper.png", Util.BitmapDataToByteArray(wallpaperBmp));
				if (dockBmp != null) 
				{
					zip.addFile(ThemeName + "/Dock.png", Util.BitmapDataToByteArray(dockBmp));
				}
				if (statusBarBmp != null)
				{
					zip.addFile(ThemeName + "/StatusBar.png", Util.BitmapDataToByteArray(statusBarBmp));
				}
				zip.serialize(bytes, true);
				var fr:FileReference = new FileReference();
				fr.save(bytes, ThemeName + ".zip");
			}
			
			[Embed(source='Resources/Image/Wallpaper.png')]
			private var wallpaperClass:Class;
			[Embed(source='Resources/Image/StatusBar_blank.png')]
			private var statusBarClass:Class;
			[Embed(source='Resources/Image/Dock_blank.png')]
			private var dockClass:Class;
			[Bindable]
			public var wallpaperBmp:Bitmap;
			[Bindable]
			public var statusBarBmp:Bitmap = new statusBarClass();
			[Bindable]
			public var dockBmp:Bitmap = new dockClass();
		]]>
	</mx:Script>
	<mx:Image id="wallpaper" x="45" y="135" maxWidth="320" maxHeight="480" 
			  source="{wallpaperBmp}"
			  />
	<mx:VBox verticalGap="0" horizontalAlign="center"
			 x="45" y="135" click="wallpaper_clickHandler(event)"
			 width="320" height="480" >
		<mx:Canvas width="100%" click="onStatusBarClick()" height="20">
			<mx:Image id="statusBar" width="100%" maxHeight="20" source="{statusBarBmp}"></mx:Image>
			<mx:Image source="@Embed('Resources/Image/status.png')" />
			<mx:Label id="labTime" x="148" y="1" text="12:21 PM" color="#D2D9D8" fontSize="12"/>
			<controls:Signal x="0" y="0">
			</controls:Signal>
		</mx:Canvas>
		<mx:Canvas width="100%" height="369" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:HBox id="container" height="100%" x="0" horizontalGap="0" mouseDown="container_mouseDownHandler(event)" mouseUp="container_mouseUpHandler(event)">
			</mx:HBox>
		</mx:Canvas>
		<mx:Canvas id="dockContainer" click="onDockClick(event)" height="91" width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:Image id="dock" source="{dockBmp}" maxWidth="320" maxHeight="120" />
			<theme:Icon x="11" y="8" ImageUrl="{_phoneIcon}" Text="Phone" height="83" click="icon_clickHandler(event, 377)">
			</theme:Icon>
			<theme:Icon x="87" y="8" ImageUrl="{_mailIcon}" Text="Mail" height="83" click="icon_clickHandler(event, 377)">
			</theme:Icon>
			<theme:Icon x="163" y="8" ImageUrl="{_safariIcon}" Text="Safari" height="83" click="icon_clickHandler(event, 377)">
			</theme:Icon>
			<theme:Icon x="239" y="8" ImageUrl="{_ipodIcon}" Text="iPod" height="83" click="icon_clickHandler(event, 377)">
			</theme:Icon>
		</mx:Canvas>
	</mx:VBox>
	<mx:HBox id="indexBox" width="100%" horizontalAlign="center" horizontalGap="2" x="0" y="627">
	</mx:HBox>
	<mx:Sequence id="overEffect">
		<mx:Glow duration="600" color="#dce025" alphaFrom="0" alphaTo="1" blurXFrom="0" blurXTo="8"  blurYFrom="0" blurYTo="8" />
		<mx:Glow duration="600" color="#dce025" alphaFrom="1" alphaTo="0" blurXFrom="8" blurXTo="0"  blurYFrom="8" blurYTo="0" />
	</mx:Sequence>
</mx:Canvas>
